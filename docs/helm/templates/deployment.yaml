apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kimai2.fullname" . }}
  labels:
    {{- include "kimai2.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "kimai2.selectorLabels" . | nindent 6 }}

  {{- if .Values.updateStrategy }}
  strategy: {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kimai2.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: ADMINMAIL
              value: {{ .Values.kimaiAdminEmail }}
            - name: ADMINPASS
              value: {{ .Values.kimaiAdminPassword }}
            - name: APP_ENV
              value: {{ .Values.kimaiEnvironment }}
            - name: DATABASE_URL
              value: {{ include "kimai2.databaseUrl" . }}
            - name: TRUSTED_HOSTS
              value: localhost,{{ .Values.ingress.host }}
          ports:
            - name: http
              containerPort: 8001
              protocol: TCP
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#              host: localhost
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
#              host: localhost
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /opt/kimai/var
              name: kimai-data
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: kimai-data
          {{- if  .Values.persistence.enabled}}
          persistentVolumeClaim:
            claimName: {{ include "kimai2.name" .}}-data
          {{- else }}
          emptyDir: {}
          {{- end }}
